/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.danilore.piniaterializzety.views;

import com.danilore.piniaterializzety.views.persona.VPersona;
import com.danilore.piniaterializzety.views.usuario.VUsuariosListado;
import com.danilore.piniaterializzety.views.usuario.VUsuarios;
import com.danilore.piniaterializzety.views.usuario.VRolesListado;
import com.danilore.piniaterializzety.views.usuario.VRoles;
import com.danilore.piniaterializzety.controller.LoginController;
import com.danilore.piniaterializzety.controller.PermisoController;
import com.danilore.piniaterializzety.controller.PermisoListadoController;
import com.danilore.piniaterializzety.controller.PersonaController;
import com.danilore.piniaterializzety.controller.RolListadoController;
import com.danilore.piniaterializzety.controller.UnidadMedidaListadoController;
import com.danilore.piniaterializzety.controller.UsuarioListadoController;
import com.danilore.piniaterializzety.models.usuario.Usuario;
import com.danilore.piniaterializzety.views.producto.VUnidadMedidaListado;
import com.danilore.piniaterializzety.views.usuario.VPermiso;
import com.danilore.piniaterializzety.views.usuario.VPermisoListado;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class VPrincipal extends javax.swing.JFrame {

    private final Usuario usuario;

    /**
     * Creates new form VPrincipal
     *
     * @param usuario
     * @throws java.sql.SQLException
     */
    public VPrincipal(Usuario usuario) throws SQLException {
        this.usuario = usuario;
        initComponents();

        this.setExtendedState(MAXIMIZED_BOTH);
        lbl_user.setText(usuario.getNombre());

        configurarMenuSegunPermisos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorio = new javax.swing.JDesktopPane();
        lbl_user = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuPersonas = new javax.swing.JMenu();
        menuItemGestionPersonas = new javax.swing.JMenuItem();
        menuUsuarios = new javax.swing.JMenu();
        menuitemGestionUser = new javax.swing.JMenuItem();
        menuitemGestionRoles = new javax.swing.JMenuItem();
        menuitemGestionPermisos = new javax.swing.JMenuItem();
        menu_cerrarsesion = new javax.swing.JMenu();
        menuitemCerrarSesion = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_user.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N

        escritorio.setLayer(lbl_user, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, escritorioLayout.createSequentialGroup()
                .addGap(0, 610, Short.MAX_VALUE)
                .addComponent(lbl_user, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(escritorioLayout.createSequentialGroup()
                .addComponent(lbl_user, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 502, Short.MAX_VALUE))
        );

        getContentPane().add(escritorio, java.awt.BorderLayout.CENTER);

        jMenu4.setText("Gestion de Entradas");
        jMenu4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jMenuBar1.add(jMenu4);

        jMenu1.setText("Gestion de Salidas");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jMenuBar1.add(jMenu1);

        jMenu3.setText("Productos");
        jMenu3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jMenuItem1.setText("Listado de Unidades de Medida");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar1.add(jMenu3);

        menuPersonas.setText("Personas");
        menuPersonas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuPersonas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        menuItemGestionPersonas.setText("Gestión de Personas");
        menuItemGestionPersonas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuItemGestionPersonas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemGestionPersonasActionPerformed(evt);
            }
        });
        menuPersonas.add(menuItemGestionPersonas);

        jMenuBar1.add(menuPersonas);

        menuUsuarios.setText("Usuarios");
        menuUsuarios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuUsuarios.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        menuUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuUsuariosActionPerformed(evt);
            }
        });

        menuitemGestionUser.setText("Gestión de Usuarios");
        menuitemGestionUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuitemGestionUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemGestionUserActionPerformed(evt);
            }
        });
        menuUsuarios.add(menuitemGestionUser);

        menuitemGestionRoles.setText("Gestión de Roles");
        menuitemGestionRoles.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuitemGestionRoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemGestionRolesActionPerformed(evt);
            }
        });
        menuUsuarios.add(menuitemGestionRoles);

        menuitemGestionPermisos.setText("Gestión de Permisos");
        menuitemGestionPermisos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuitemGestionPermisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemGestionPermisosActionPerformed(evt);
            }
        });
        menuUsuarios.add(menuitemGestionPermisos);

        jMenuBar1.add(menuUsuarios);

        menu_cerrarsesion.setText("Cerrar Sesión");
        menu_cerrarsesion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menu_cerrarsesion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        menu_cerrarsesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_cerrarsesionActionPerformed(evt);
            }
        });

        menuitemCerrarSesion.setText("Cerrar Sesión");
        menuitemCerrarSesion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuitemCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemCerrarSesionActionPerformed(evt);
            }
        });
        menu_cerrarsesion.add(menuitemCerrarSesion);

        jMenuBar1.add(menu_cerrarsesion);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuUsuariosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuUsuariosActionPerformed

    private void menuitemGestionUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemGestionUserActionPerformed
        if (!tienePermiso("GESTIONAR_USUARIOS")) {
            JOptionPane.showMessageDialog(this, "No tienes permiso para realizar esta acción.", "Acceso denegado", JOptionPane.WARNING_MESSAGE);
            return;
        }

        VUsuarios vistaUsuarios = new VUsuarios(); // Instancia para edición
        VUsuariosListado vistaListado = new VUsuariosListado(); // Instancia para listado

        // Controlador de listado con referencia a la vista de edición
        UsuarioListadoController controller = new UsuarioListadoController(vistaListado, vistaUsuarios, usuario);

        escritorio.add(vistaListado); // Agrega la vista de listado al escritorio
        escritorio.add(vistaUsuarios); // Agrega la vista de edición al escritorio
        vistaListado.setVisible(true); // Mostrar la vista de listado inicialmente
    }//GEN-LAST:event_menuitemGestionUserActionPerformed

    private void menu_cerrarsesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_cerrarsesionActionPerformed


    }//GEN-LAST:event_menu_cerrarsesionActionPerformed

    private void menuitemCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemCerrarSesionActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas cerrar sesión?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            this.dispose(); // Cierra la ventana actual

            VLogin login = new VLogin(); // Crea una nueva instancia de VLogin
            try {
                LoginController controller = new LoginController(login);
            } catch (SQLException ex) {
                Logger.getLogger(VPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            login.setVisible(true); // Abre la ventana de login

        }
    }//GEN-LAST:event_menuitemCerrarSesionActionPerformed

    private void menuitemGestionRolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemGestionRolesActionPerformed
        if (!tienePermiso("GESTIONAR_ROLES")) {
            JOptionPane.showMessageDialog(this, "No tienes permiso para realizar esta acción.", "Acceso denegado", JOptionPane.WARNING_MESSAGE);
            return;
        }

        VRoles vistaRoles = new VRoles(); // Instancia para edición
        VRolesListado vistaListado = new VRolesListado(); // Instancia para listado

        // Controlador de listado con referencia a la vista de edición
        RolListadoController controller = new RolListadoController(vistaListado, vistaRoles, usuario);

        escritorio.add(vistaListado); // Agrega la vista de listado al escritorio
        escritorio.add(vistaRoles); // Agrega la vista de edición al escritorio
        vistaListado.setVisible(true); // Mostrar la vista de listado inicialmente
    }//GEN-LAST:event_menuitemGestionRolesActionPerformed

    private void menuitemGestionPermisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemGestionPermisosActionPerformed
        if (!tienePermiso("GESTIONAR_PERMISOS")) {
            JOptionPane.showMessageDialog(this, "No tienes permiso para realizar esta acción.", "Acceso denegado", JOptionPane.WARNING_MESSAGE);
            return;
        }

        VPermisoListado vistaListado = new VPermisoListado();
        VPermiso vistaPermiso = new VPermiso();
        //Metodos CRUD
        PermisoListadoController controller = new PermisoListadoController(vistaListado, vistaPermiso, usuario); // Pasar el usuario
        
        // Centrar el JInternalFrame dentro del JDesktopPane
        int x = (escritorio.getWidth() - vistaListado.getWidth()) / 2;
        int y = (escritorio.getHeight() - vistaListado.getHeight()) / 2;
        vistaListado.setLocation(x, y);
        
        int x2 = (escritorio.getWidth() - vistaPermiso.getWidth()) / 2;
        int y2 = (escritorio.getHeight() - vistaPermiso.getHeight()) / 2;
        vistaPermiso.setLocation(x2, y2);

        escritorio.add(vistaListado);
        escritorio.add(vistaPermiso);
        
        vistaListado.setVisible(true);
    }//GEN-LAST:event_menuitemGestionPermisosActionPerformed

    private void menuItemGestionPersonasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemGestionPersonasActionPerformed
        if (!tienePermiso("GESTIONAR_PERSONAS")) {
            JOptionPane.showMessageDialog(this, "No tienes permiso para realizar esta acción.", "Acceso denegado", JOptionPane.WARNING_MESSAGE);
            return;
        }

        VPersona vista = new VPersona();
        PersonaController controller = new PersonaController(vista);
        escritorio.add(vista);
        vista.show();
    }//GEN-LAST:event_menuItemGestionPersonasActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (!tienePermiso("GESTIONAR_PERMISOS")) {
            JOptionPane.showMessageDialog(this, "No tienes permiso para realizar esta acción.", "Acceso denegado", JOptionPane.WARNING_MESSAGE);
            return;
        }

        VUnidadMedidaListado vista = new VUnidadMedidaListado();
        UnidadMedidaListadoController controller = new UnidadMedidaListadoController(vista);
        escritorio.add(vista);
        vista.show();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public static void main(String args[]) {
        // Look and Feel Nimbus
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(VPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        // Validar el usuario y lanzar ventana principal
        java.awt.EventQueue.invokeLater(() -> {
            try {
                Usuario usuario = obtenerUsuarioAutenticado(); // Asegúrate de pasar un usuario válido aquí
                if (usuario != null) {
                    VPrincipal ventanaPrincipal = new VPrincipal(usuario);
                    ventanaPrincipal.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Error: Usuario no autenticado.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(VPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JDesktopPane escritorio;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    public javax.swing.JLabel lbl_user;
    private javax.swing.JMenuItem menuItemGestionPersonas;
    private javax.swing.JMenu menuPersonas;
    private javax.swing.JMenu menuUsuarios;
    private javax.swing.JMenu menu_cerrarsesion;
    private javax.swing.JMenuItem menuitemCerrarSesion;
    private javax.swing.JMenuItem menuitemGestionPermisos;
    private javax.swing.JMenuItem menuitemGestionRoles;
    private javax.swing.JMenuItem menuitemGestionUser;
    // End of variables declaration//GEN-END:variables

    private void configurarMenuSegunPermisos() {

        // Gestión de Personas
        // Deshabilitar Menú de Personas
        menuPersonas.setEnabled(usuario.tienePermiso("GESTIONAR_PERSONAS"));

        // Deshabilitar Gestión de Personas
        menuItemGestionPersonas.setEnabled(usuario.tienePermiso("GESTIONAR_PERSONAS"));

        // Gestión de Usuarios, Roles y Permisos
        // Deshabilitar Menú de Usuarios
        menuUsuarios.setEnabled(
                usuario.tienePermiso("GESTIONAR_USUARIOS")
                || usuario.tienePermiso("GESTIONAR_ROLES")
                || usuario.tienePermiso("GESTIONAR_PERMISOS")
        );

        // Deshabilitar Gestión de Usuarios
        menuitemGestionUser.setEnabled(usuario.tienePermiso("GESTIONAR_USUARIOS"));

        // Deshabilitar Gestión de Roles
        menuitemGestionRoles.setEnabled(usuario.tienePermiso("GESTIONAR_ROLES"));

        // Deshabilitar Gestión de Permisos
        menuitemGestionPermisos.setEnabled(usuario.tienePermiso("GESTIONAR_PERMISOS"));
    }

    private static Usuario obtenerUsuarioAutenticado() {
        // Este método debería implementar la lógica para autenticar un usuario previamente
        return null; // Cambia esto para retornar un usuario válido
    }

    private boolean tienePermiso(String permiso) {
        return usuario.tienePermiso(permiso);
    }

}
